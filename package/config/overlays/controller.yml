#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"source-controller"}})
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      serviceAccountName: source-controller
      #@overlay/match missing_ok=True
      containers:
        #@overlay/match by="name"
        - name: manager
          args:
          #@overlay/match by=overlay.subset("--log-level=info")
          - #@ "--log-level={}".format(data.values.logging.level)
          #@overlay/match by=overlay.subset("--log-encoding=json")
          - #@ "--log-encoding={}".format(data.values.logging.encoding)
          - #@ "--leader-election-lease-duration={}".format(data.values.leader_election.lease_duration)
          - #@ "--leader-election-release-on-cancel={}".format(data.values.leader_election.release_on_cancel)
          - #@ "--leader-election-renew-deadline={}".format(data.values.leader_election.renew_deadline)
          - #@ "--leader-election-retry-period={}".format(data.values.leader_election.retry_period)
          env:
          #@ if/end data.values.proxy.http_proxy != "":
          - name: HTTP_PROXY
            value: #@ data.values.proxy.http_proxy
          #@ if/end data.values.proxy.https_proxy != "":
          - name: HTTPS_PROXY
            value: #@ data.values.proxy.https_proxy
          #@ if/end data.values.proxy.no_proxy != "":
          - name: NO_PROXY
            value: #@ data.values.proxy.no_proxy
          #! Pull image from GitHub Container Registry rather than Docker Hub.
          #@overlay/replace via=lambda left, _: "ghcr.io/" + left
          image:
          #@overlay/match missing_ok=True
          resources:
            limits:
              cpu: #@ data.values.resources.limits.cpu
              memory: #@ data.values.resources.limits.memory
